@import '../field.shadow';
@import '../prompt.shadow';

:host {
    --f-size: var(--select-f-size, var(--f-sm));
    --b-width: var(--select-b-width, 1px);
    --b-color: var(--select-b-color, var(--b-fade));
    --py: var(--select-py, .90625rem);
    --px: var(--select-px, 1rem);
    --size: var(--select-size, 3rem);
    --label-px: var(--select-label-px, .25rem);
    --label-f-size: var(--select-label-f-size, var(--f-xxs));
    --label-f-color: var(--select-label-f-color, var(--f-theme-fader));
    cursor: pointer;
}

[part=root] {
    display: inherit;
    contain: style;
    font: inherit;
    flex-wrap: inherit;
    flex-direction: inherit;
    align-items: inherit;
    justify-content: inherit;
    letter-spacing: inherit;
    line-height: inherit;
    text-transform: inherit;
    text-overflow: inherit;
    text-align: inherit;
    white-space: inherit;
    text-decoration: inherit;
    color: inherit;
    border-radius: inherit;
    width: 100%;
    height: 100%;
    background-origin: border-box;
    box-sizing: border-box;
}

[part=body] {
    font-weight: 500;
    flex-wrap: wrap;
    flex: 1 1 auto;
    width: auto;
    margin: #{-$xs};

    &:empty[placeholder] {
        margin: 0 !important;

        &:before {
            content: attr(placeholder);
            color: var(--f-fadest);
        }
    }

    &:empty[label]:not([placeholder]):before {
        content: attr(label);
        color: transparent;
    }
}

:host([readonly]) {
    cursor: text;
}

[part=search] {
    max-width: fit-content;
    display: inline-flex;
    order: 1;
    flex: 1 1 auto;
    width: 0;
    min-width: 7rem;
    padding: 0;
    margin: $xs;
    word-break: keep-all;
}

:host(.underlined) {
    m-icon[part=icon] {
        margin-left: .375rem;
    }
}

::slotted([part=output]) {
    display: none;
}

m-icon[part=icon] {
    --f-color: var(--f-fadest);
    font-size: var(--f-size);
    padding-right: calc(var(--px) / 2);
    margin-left: calc(var(--px) / -2)
}

m-chip {
    --chip-bg-color: var(--theme-fader);
    --chip-b-color: transparent;
    margin: $xxs;
}

m-button[part=close] {
    --button-bg-color-hover: var(--bg-object-hover);
    --button-bg-color: transparent;
    --button-f-color: var(--f-fader);

    m-icon {
        --icon-stroke-width: 3px;
    }
}

@media (any-hover: hover) {
    :host(:not([disabled]):not([readonly]):hover) {
        m-icon[part=icon] {
            color: var(--f-fade);
        }
    }
}

m-chip {
    flex: 0 0 auto;
}

:host(:not([multiple]):not([searchable])){
    [part=search] {
        cursor: pointer;
    }
}