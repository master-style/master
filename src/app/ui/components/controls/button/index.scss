@import '../../../variables';

[part=shadow] {
    background-color: var(--bg-theme);
    display: inline-flex;
    align-items: center;
    justify-content: center;
    padding: 0 var(--px);
    min-width: var(--size);
    min-height: var(--size);
    transition: box-shadow ease-out .15s;
    will-change: box-shadow;
    cursor: pointer;
    // reset
    background-origin: border-box;
    position: relative;
    contain: style;
    font: inherit;
    letter-spacing: inherit;
    line-height: inherit;
    text-transform: inherit;
    text-overflow: inherit;
    text-align: inherit;
    white-space: inherit;
    text-decoration: inherit;
    color: inherit;
    border-radius: inherit;
    border: 0;
    width: 100%;
    height: 100%;
    outline: none;
    -webkit-appearance: none;
    -webkit-user-select: none;
    user-select: none;

    @media (any-hover: hover) {
        &:hover:not([loading]):not([disabled]) {
            background-color: var(--bg-theme-hover, var(--themeFade));
            box-shadow: inset 0 0 0 1px var(--b-theme-hover);
        }
    }

    &[disabled] {
        cursor: no-drop !important;
        color: var(--f-fadest) !important;
        background-color: var(--bg-disabled) !important;
        border-color: transparent !important;
        box-shadow: none !important;
    }
}

:host {
    --px: #{$md};
    --size: 3rem;
    --f-size: #{$f-sm};
    display: inline-flex;
    font-size: var(--f-size);
    color: var(--f-theme);
    font-weight: 500;
    letter-spacing: 1.25px;
    line-height: 1.15;
    text-transform: uppercase;
    white-space: nowrap;
    border-radius: $xs;

    // css hack to fix some bug
    // &:after {
    //     content: '';
    //     min-height: inherit;
    //     font-size: 0;
    // }

    &::-moz-focus-inner {
        border-style: none;
        padding: 0;
    }

    m-load {
        position: absolute;
        left: 0;
        right: 0;
        top: 0;
        bottom: 0;
        margin: auto;
    }

}

:host(.raised:not([loading]):not([disabled])) {
    box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2), 0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, .12);
}

:host(.sm) {
    --px: 1.1rem;
    --size: 2.5rem;
    --f-size: .9125rem;
}

:host(.xs) {
    --px: .8rem;
    --size: 2rem;
    --f-size: .8125rem;
}

:host(.lg) {
    --px: 1.4rem;
    --size: 3.5rem;
    --f-size: 1.125rem;
}


:host(.round),
:host(.square) {
    --px: 0;
    width: var(--size);
    height: var(--size);
}

:host(.square) {
    border-radius: 0;
}

:host(.outlined) {
    [part=shadow] {
        background-color: transparent;
        border: 1px solid var(--b-theme, var(--b-fadest));
    }

    @media (any-hover: hover) {
        [part=shadow]:hover:not([loading]):not([disabled]) {
            border-color: var(--b-theme-hover);
        }
    }
}

:host([loading]) {
    cursor: progress !important;

    [part=shadow] {
        pointer-events: none !important;
        color: transparent !important;
        box-shadow: none !important;
    }
}

::slotted([part=button-head]) {
    display: flex;
    margin-left: -.25rem;
    margin-right: .5rem;
}

::slotted([part=button-head].abs) {
    left: 0;
    margin-left: calc(var(--px) - .3rem);
}

::slotted([part=button-foot]) {
    display: flex;
    margin-right: -.25rem;
    margin-left: .5rem;
}

::slotted([part=button-foot].abs) {
    right: 0;
    margin-right: calc(var(--px) - .3rem);
}

.close-button {
    --bg-theme: var(--b-fade);
    --bg-theme-hover: var(--f-fadest);
    --b-theme-hover: transparent;
    color: var(--theme);

    m-icon {
        stroke-width: 4px;
    }
}