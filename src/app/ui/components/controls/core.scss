@import '../../variables';

::slotted(::placeholder) {
    opacity: 1; // fixed safari default opacity
    color: var(--f-fader);
    -webkit-text-fill-color: var(--f-fader); // fix safari opacity problem
}

/**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */

// .ctlField {
//     --set-size: calc(3rem - 2px);
//     border: 1px solid var(--b-fade);
//     border-radius: $xs;
//     min-height: var(--set-size);
//     padding: 0 1rem;

//     legend {
//         position: relative;
//         top: -1px;
//         display: block;
//         line-height: 0;
//         font-size: var(--f-xxs);
//         color: var(--f-themeFader);
//         padding: 0 3px 0 4px;
//         margin: 0 -5px;
//     }

//     .ctl {
//         margin-right: $sm;
//         height: var(--set-size);
//     }

//     @media (any-hover: hover) {
//         &:not([disabled]):hover {
//             border-color: var(--f-fadest)
//         }
//     }

//     &:focus-within {
//         border-color: var(--f-fadest)
//     }
// }

:host {
    position: relative;
    display: inline-flex;
    align-items: center;
    font-size: var(--f-sm);
    --b-width: 1px;
    --label-y: calc(var(--py, .875rem));

    // ~m-icon {
    //     margin: 0 .5rem 0 .2rem;
    //     color: var(--f-fadest);
    // }

    // ~m-ripples {
    //     border-radius: $xs;
    // }

    &:focus:not([readonly]):not([disabled]) {

        ~fieldset {
            border-color: var(--b-fade);
        }

        &.underlined {
            ~fieldset {
                border-bottom-width: 2px;
            }
        }

        &.outlined {
            ~fieldset {
                border-width: 2px;

                legend {
                    margin-left: -1px;
                    height: 2px;
                }
            }
        }
    }

    &[readonly]:not(.ctlOutput) {
        ~fieldset {
            border-style: dashed;
        }
    }

    &:-webkit-autofill {
        transition: background-color 5000s ease-in-out 0s;
        border-style: dashed !important;
        color: var(--f-blue);
        -webkit-text-fill-color: var(--f-blue);
    }

    &:focus:not([readonly]):not([disabled]) {
        color: var(--f-fade);
    }

    // &.xs {
    //     font-size: var(--f-xs);
    //     --py: .375rem;
    //     --px: .8rem;

    //     &.underlined {
    //         padding-bottom: .25rem;
    //     }

    //     ~m-label {
    //         --py: .375rem;
    //     }

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         font-size: var(--f-xs);
    //         --py: .375rem;
    //         --px: .8rem;
    //     }
    // }

    // &.sm {
    //     --py: 0.625rem;

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         --py: 0.625rem;
    //         --py: 0.625rem;
    //     }
    // }

    // &.lg {
    //     font-size: 1.125rem;
    //     --px: 1.2rem;
    //     --py: 1.0315rem;

    //     ~m-label {
    //         --px: 1.2rem;
    //         --py: 1.0315rem;
    //     }

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         font-size: 1.125rem;
    //         --py: 1.0315rem;
    //         --px: 1.2rem;
    //     }
    // }


    &[disabled] {
        cursor: no-drop !important;
        color: var(--f-fadest) !important;
        -webkit-text-fill-color: var(--f-fadest); // fix safari opacity problem

        &::placeholder {
            -webkit-text-fill-color: var(--f-fadest); // fix safari opacity problem
        }

        ~fieldset {
            cursor: no-drop !important;
            border-style: dashed;
        }

        ~.ctlHead,
        ~.ctlFoot,
        ~m-label {
            cursor: no-drop !important;
            color: var(--f-fadest) !important;
        }

    }

    @media (any-hover: hover) {
        &:not([disabled]):not([readonly]):hover {
            ~fieldset {
                border-color: var(--f-fadest)
            }

            ~m-icon {
                color: var(--f-fade);
            }
        }
    }
}

:host([label]:placeholder-shown:not(:focus):not([readonly])) {
    ~.ctlHead,
    ~.ctlFoot,
    &::placeholder {
        opacity: 0;
        transition-delay: 0s;
    }

    ~fieldset legend {
        transition-delay: .1s;
        width: 0 !important;
    }

    ~m-label {
        transition-delay: .1s;
        transform: translate(0, var(--label-y));
    }
}

:host(.outlined) {
    border-radius: $xs;

    fieldset {
        border-width: var(--b-width);
    }
}

:host(.underlined) {
    padding: calc(var(--py, .875rem) - 0.25rem) 0;

    fieldset {
        border-bottom-width: var(--b-width);
        --px: 0;
    }

    m-label {
        --px: 0;
    }

    ~.ctlHead,
    ~.ctlFoot {
        --px: 0;
        padding: calc(var(--py, .875rem) - .25px) 0;
    }
}

m-ripples {
    border-radius: inherit;
}

m-label {
    position: absolute;
    top: 0;
    left: var(--px, 1rem);
    display: block;
    user-select: none;
    pointer-events: none;
    transition-property: transform, opacity;
    will-change: transform, opacity;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    transform-origin: left;
    line-height: inherit;
    font-size: var(--f-sm);
    color: var(--f-themeFader);
    transform: scale(.75) translate(0, -65%);
    white-space: nowrap;
    // i {
    //     display: inline-flex;
    //     color: inherit;
    //     margin-right: $xs;
    //     line-height: 0;
    // }
}

fieldset {
    position: absolute;
    box-sizing: border-box;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    color: var(--theme, var(--f-themeFader));
    border: 0px solid var(--b-fade);
    padding: 0 calc(var(--px, 1rem) - 5px);
    border-radius: inherit;
}

legend {
    transition: .2s width cubic-bezier(0, 0, .2, 1);
    height: 1px;
    will-change: width;
    color: var(--f-fade);
    font-size: var(--f-xxs);
    line-height: 0;
}

m-badge {
    position: absolute;
    z-index: $z-up;
    top: 100%;
    right: 0;
    max-width: 100%;
    visibility: hidden;
    margin: $xs 0 0 0;
    padding: .25rem .4rem;
    line-height: 1.2;
    border-radius: $xs;
    letter-spacing: inherit;
    white-space: normal;
    text-align: right;
}

::slotted(:invalid) {
    box-shadow: none;
}

::slotted([part=body]) {
    -webkit-appearance: none !important;
    text-overflow: ellipsis;
    -ms-text-overflow: ellipsis;
    white-space: nowrap;
    font-family: inherit;
    font-size: var(--f-sm);
    z-index: $z-up;
    contain: style;
    width: 100%;
    font-weight: 500;
    color: var(--f-theme);
    -webkit-text-fill-color: unset; // fix safari opacity problem
    opacity: 1;
    transition: color .2s ease;
    will-change: color;
    user-select: text;
    -webkit-user-select: text;
    padding-left: var(--px, 1rem);
    padding-right: var(--px, 1rem);
    cursor: text;
}

::slotted([part=body]:-moz-read-only) {
    cursor: default;
    caret-color: transparent;
}

::slotted([part=body]::selection) {
    color: #000;
}

::slotted([part=head]),
::slotted([part=foot]),
::slotted([part=body]) {
    margin-top: .5rem;
    padding-top: calc(var(--py, .875rem) - .5rem);
    padding-bottom: var(--py, .875rem);
}

::slotted([part=body]::placeholder),
::slotted([part=head]),
::slotted([part=foot]) {
    transition: opacity .2s .1s cubic-bezier(0, 0, .2, 1);
    will-change: opacity;
}

::slotted([part=head]),
::slotted([part=foot]) {
    user-select: none;
    white-space: nowrap;
    pointer-events: none;
}

::slotted([part=head]) {
    margin-right: -.6875rem;
    padding-left: var(--px, 1rem);
    order: -1;
}

::slotted([part=foot]) {
    margin-left: .3125rem;
    padding-right: var(--px, 1rem);
}

// [validate] {

//     &:valid:not(:placeholder-shown),
//     &:valid[class*=dirty],
//     &.valid[class*=dirty],
//     &[class*=valid][class*=dirty] {
//         ~fieldset {
//             --theme: var(--green);
//             border-color: var(--green);
//         }

//         ~m-label {
//             color: var(--f-green)
//         }

//         ~.validate {
//             --bg-theme: var(--greenFader);
//             --f-theme: var(--green);
//             visibility: visible;
//         }
//     }
// }

// [invalidate] {

//     /* state: invalid */
//     &:invalid:not(:placeholder-shown),
//     &:invalid[class*=dirty],
//     &.invalid[class*=dirty],
//     &[class*=-invalid][class*=dirty] {
//         ~fieldset {
//             --theme: var(--red);
//             border-color: var(--red);
//         }

//         ~m-label {
//             color: var(--f-red)
//         }

//         ~.invalidate {
//             --bg-theme: var(--redFader);
//             --f-theme: var(--red);
//             visibility: visible;
//         }
//     }
// }

// [warning]:not(:placeholder-shown) {
//     ~fieldset {
//         --theme: var(--yellow);
//         border-color: var(--yellow);
//     }

//     ~m-label {
//         color: var(--f-yellow)
//     }

//     ~m-badge.warning {
//         --bg-theme: var(--yellowFader);
//         --f-theme: var(--yellow);
//         visibility: visible;
//     }
// }