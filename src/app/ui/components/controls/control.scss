@import '../../variables';

/**
   * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
   */
/**
   * 1. Correct the inability to style clickable types in iOS and Safari.
   * 2. Change font properties to `inherit` in Safari.
   */

// .ctlField {
//     --set-size: calc(3rem - 2px);
//     border: 1px solid var(--b-fade);
//     border-radius: $xs;
//     min-height: var(--set-size);
//     padding: 0 1rem;

//     legend {
//         position: relative;
//         top: -1px;
//         display: block;
//         line-height: 0;
//         font-size: var(--f-xxs);
//         color: var(--f-themeFader);
//         padding: 0 3px 0 4px;
//         margin: 0 -5px;
//     }

//     .ctl {
//         margin-right: $sm;
//         height: var(--set-size);
//     }

//     @media (any-hover: hover) {
//         &:not([disabled]):hover {
//             border-color: var(--f-fadest)
//         }
//     }

//     &:focus-within {
//         border-color: var(--f-fadest)
//     }
// }

:host {
    position: relative;
    display: inline-flex;
    align-items: center;
    font-size: var(--f-sm);
    --b-width: 1px;
    --b-color: var(--b-fade);
    --py: .875rem;
    --px: 1rem;
    // ~m-icon {
    //     margin: 0 .5rem 0 .2rem;
    //     color: var(--f-fadest);
    // }

    // ~m-ripples {
    //     border-radius: $xs;
    // }

    // &.xs {
    //     font-size: var(--f-xs);
    //     --py: .375rem;
    //     --px: .8rem;

    //     &.underlined {
    //         padding-bottom: .25rem;
    //     }

    //     ~m-label {
    //         --py: .375rem;
    //     }

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         font-size: var(--f-xs);
    //         --py: .375rem;
    //         --px: .8rem;
    //     }
    // }

    // &.sm {
    //     --py: 0.625rem;

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         --py: 0.625rem;
    //         --py: 0.625rem;
    //     }
    // }

    // &.lg {
    //     font-size: 1.125rem;
    //     --px: 1.2rem;
    //     --py: 1.0315rem;

    //     ~m-label {
    //         --px: 1.2rem;
    //         --py: 1.0315rem;
    //     }

    //     ~.ctlHead,
    //     ~.ctlFoot,
    //     ~m-label,
    //     ~fieldset {
    //         font-size: 1.125rem;
    //         --py: 1.0315rem;
    //         --px: 1.2rem;
    //     }
    // }
}

:host([disabled]) {
    cursor: no-drop !important;
    color: var(--f-fadest) !important;
    -webkit-text-fill-color: var(--f-fadest); // fix safari opacity problem

    &::placeholder {
        -webkit-text-fill-color: var(--f-fadest); // fix safari opacity problem
    }

    fieldset {
        border-style: dashed;
    }

    ::slotted([part=head]),
    ::slotted([part=foot]),
    m-label {
        cursor: no-drop !important;
        color: var(--f-fadest) !important;
    }
}


@media (any-hover: hover) {
    :host(:not([disabled]):not([readonly]):hover) {
        --b-color: var(--f-fadest);
    }
}

:host([readonly]:not(.output)) {
    fieldset {
        border-style: dashed;
    }
}

:host(:-webkit-autofill) {
    transition: background-color 5000s ease-in-out 0s;
    border-style: dashed !important;
    color: var(--f-blue);
    -webkit-text-fill-color: var(--f-blue);
}

:host(:active:not([readonly]):not([disabled])),
:host(:focus-within:not([readonly]):not([disabled])) {
    --b-width: 2px;

    ::slotted([part=body]) {
        color: var(--f-fade);
    }
}

:host([label][empty]:not(:focus-within):not(:active):not([readonly])) {

    ::slotted([part=head]),
    ::slotted([part=foot]),
    ::slotted([part=body]) {
        opacity: 0;
        transition-delay: 0s;
    }

    legend {
        max-width: 0;
    }

    m-label {
        transition-delay: .1s;
        transform: translate(0, var(--py));
    }
}

:host(.outlined) {
    border-radius: $xs;

    fieldset {
        border-width: var(--b-width);
    }

    legend {
        transition:
            max-width .2s cubic-bezier(0.33, 1, 0.68, 1) .1s,
            padding-right .2s cubic-bezier(0.33, 1, 0.68, 1) .1s;
        margin-left: -2px;
        will-change: max-width, padding-right;
    }
}

// outlined
:host(.outlined[label]:not([empty]):not(:focus-within)) {
    legend {
        transition: none;
        padding-right: 7px;
    }
}

// outlined

:host(.outlined[label]:active:not([readonly]):not([disabled])),
:host(.outlined[label]:focus-within:not([readonly]):not([disabled])) {
    legend {
        transition:
            max-width .2s ease-in,
            padding-right .2s ease-in;
        margin-left: -3px;
        padding-right: 7px;
        height: 2px;
    }
}

:host(.underlined) {
    padding: calc(var(--py) - 0.25rem) 0;

    fieldset {
        border-bottom-width: var(--b-width);
        --px: 0;
    }

    m-label {
        --px: 0;
    }

    ::slotted([part=head]),
    ::slotted([part=foot]) {
        --px: 0;
        padding: calc(var(--py) - .25rem) 0;
    }
}

m-ripples {
    border-radius: inherit;
}

m-label {
    position: absolute;
    top: 0;
    left: var(--px);
    display: block;
    user-select: none;
    pointer-events: none;
    transition-property: transform, opacity;
    will-change: transform, opacity;
    transition-timing-function: cubic-bezier(0, 0, .2, 1);
    transition-duration: .2s;
    transform-origin: left;
    line-height: inherit;
    font-size: var(--f-sm);
    color: var(--f-themeFader);
    transform: scale(.75) translate(0, -65%);
    white-space: nowrap;
    // i {
    //     display: inline-flex;
    //     color: inherit;
    //     margin-right: $xs;
    //     line-height: 0;
    // }
}

fieldset {
    position: absolute;
    box-sizing: border-box;
    top: 0;
    width: 100%;
    height: 100%;
    display: flex;
    color: var(--theme, var(--f-themeFader));
    border: 0px solid var(--b-color);
    padding: 0 calc(var(--px) - 5px);
    border-radius: inherit;
    pointer-events: none;
}

legend {
    max-width: 100%;
    height: 1px;
    color: transparent;
    font-size: var(--f-xxs);
    line-height: 0;
    padding: 0;
    margin: 0;
    contain: layout;
    user-select: none;
}

m-badge {
    position: absolute;
    z-index: $z-up;
    top: 100%;
    right: 0;
    max-width: 100%;
    visibility: hidden;
    margin: $xs 0 0 0;
    padding: .25rem .4rem;
    line-height: 1.2;
    border-radius: $xs;
    letter-spacing: inherit;
    white-space: normal;
    text-align: right;
}

::slotted(:invalid) {
    box-shadow: none;
}

::slotted([part=body]) {
    -webkit-appearance: none !important;
    text-overflow: ellipsis;
    -ms-text-overflow: ellipsis;
    white-space: nowrap;
    font-family: inherit;
    font-size: var(--f-sm);
    z-index: $z-up;
    contain: style;
    width: 100%;
    font-weight: 500;
    color: var(--f-theme);
    -webkit-text-fill-color: unset; // fix safari opacity problem
    // transition: color .2s ease;
    // will-change: color;
    user-select: text;
    -webkit-user-select: text;
    padding-left: var(--px);
    padding-right: var(--px);
    cursor: text !important;
}

::slotted([part=head]),
::slotted([part=foot]),
::slotted([part=body]) {
    padding-top: var(--py);
    padding-bottom: var(--py);
}

::slotted([part=body]),
::slotted([part=head]),
::slotted([part=foot]) {
    transition: opacity .2s .1s cubic-bezier(0, 0, .2, 1);
    will-change: opacity;
}

::slotted([part=head]),
::slotted([part=foot]) {
    user-select: none;
    white-space: nowrap;
}

::slotted([part=head]) {
    margin-right: -.6875rem;
    padding-left: var(--px);
    order: -1;
}

::slotted([part=foot]) {
    order: 1;
    margin-left: .3125rem;
    padding-right: var(--px);
    font-size: var(--f-xxs);
}

// [validate] {

//     &:valid:not(:placeholder-shown),
//     &:valid[class*=dirty],
//     &.valid[class*=dirty],
//     &[class*=valid][class*=dirty] {
//         ~fieldset {
//             --theme: var(--green);
//             border-color: var(--green);
//         }

//         ~m-label {
//             color: var(--f-green)
//         }

//         ~.validate {
//             --bg-theme: var(--greenFader);
//             --f-theme: var(--green);
//             visibility: visible;
//         }
//     }
// }

// [invalidate] {

//     /* state: invalid */
//     &:invalid:not(:placeholder-shown),
//     &:invalid[class*=dirty],
//     &.invalid[class*=dirty],
//     &[class*=-invalid][class*=dirty] {
//         ~fieldset {
//             --theme: var(--red);
//             border-color: var(--red);
//         }

//         ~m-label {
//             color: var(--f-red)
//         }

//         ~.invalidate {
//             --bg-theme: var(--redFader);
//             --f-theme: var(--red);
//             visibility: visible;
//         }
//     }
// }

// [warning]:not(:placeholder-shown) {
//     ~fieldset {
//         --theme: var(--yellow);
//         border-color: var(--yellow);
//     }

//     ~m-label {
//         color: var(--f-yellow)
//     }

//     ~m-badge.warning {
//         --bg-theme: var(--yellowFader);
//         --f-theme: var(--yellow);
//         visibility: visible;
//     }
// }